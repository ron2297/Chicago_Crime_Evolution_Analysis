Assualt_Battery_Dist <- pppdist(crimePPP_Battery,crimePPP_Battery,type = "spa")
Assualt_Drug_Dist <- pppdist(crimePPP_Battery,crimePPP_Drug,type = "spa")
Assualt_Damage_Dist <- pppdist(crimePPP_Battery,crimePPP_Damage,type = "spa")
crime_distance_df <- data.frame(Theft = as.numeric(0),Battery = as.numeric(0),Drug = as.numeric(0),Damage = as.numeric(0))
crime_distance_df$Theft <- Assualt_Theft_Dist$distance
crime_distance_df$Battery <- Assualt_Battery_Dist$distance
crime_distance_df$Drug <- Assualt_Drug_Dist$distance
crime_distance_df$Damage <- Assualt_Damage_Dist$distance
crime_distance_df
z<- crossdist(crimePPP_Battery,crimePPP_Theft)
mean(z)
z<- crossdist(crimePPP_Battery,crimePPP_Theft)
plot(z)
crossdistplot <- function(crime_type_dist){
crime_Theft <- crossdist(crimePPP_Theft,crime_type_dist)
print(paste0("Theft Complete \n "))
crime_Assualt <- crossdist(crimePPP_Assualt,crime_type_dist)
print(paste0("Assualt Complete \n "))
crime_Battery <- crossdist(crimePPP_Battery,crime_type_dist)
print(paste0("Battery Complete \n "))
crime_Drug <- crossdist(crimePPP_Drug,crime_type_dist)
print(paste0("Drug Complete \n "))
crime_Damage <- crossdist(crimePPP_Damage,crime_type_dist)
print(paste0("Damage Complete \n "))
par(mfrow = c(1,2))
plot(crime_Theft)
plot(crime_Assualt)
plot(crime_Battery)
plot(crime_Drug)
plot(crime_Damage)
}
crossdistplot(crimePPP_Battery)
crossdistplot <- function(crime_type_dist){
crime_Theft <- crossdist(crimePPP_Theft,crime_type_dist)
print(paste0("Theft Complete \n "))
crime_Assualt <- crossdist(crimePPP_Assault,crime_type_dist)
print(paste0("Assualt Complete \n "))
crime_Battery <- crossdist(crimePPP_Battery,crime_type_dist)
print(paste0("Battery Complete \n "))
crime_Drug <- crossdist(crimePPP_Drug,crime_type_dist)
print(paste0("Drug Complete \n "))
crime_Damage <- crossdist(crimePPP_Damage,crime_type_dist)
print(paste0("Damage Complete \n "))
par(mfrow = c(1,2))
plot(crime_Theft)
plot(crime_Assualt)
plot(crime_Battery)
plot(crime_Drug)
plot(crime_Damage)
}
crossdistplot(crimePPP_Battery)
crossdistplot <- function(crime_type_dist){
crime_Theft <- crossdist(crimePPP_Theft,crime_type_dist)
print(paste0("Theft Complete \n "))
crime_Assualt <- crossdist(crimePPP_Assault,crime_type_dist)
print(paste0("Assualt Complete \n "))
crime_Battery <- crossdist(crimePPP_Battery,crime_type_dist)
print(paste0("Battery Complete \n "))
crime_Drug <- crossdist(crimePPP_Drug,crime_type_dist)
print(paste0("Drug Complete \n "))
crime_Damage <- crossdist(crimePPP_Damage,crime_type_dist)
print(paste0("Damage Complete \n "))
par(mfrow = c(2,2))
plot(crime_Theft)
plot(crime_Assualt)
plot(crime_Battery)
plot(crime_Drug)
plot(crime_Damage)
}
crossdistplot(crimePPP_Battery)
crossdistplot <- function(crime_type_dist){
crime_Theft <- crossdist(crimePPP_Theft,crime_type_dist)
print(paste0("Theft Complete \n "))
crime_Assualt <- crossdist(crimePPP_Assault,crime_type_dist)
print(paste0("Assualt Complete \n "))
crime_Battery <- crossdist(crimePPP_Battery,crime_type_dist)
print(paste0("Battery Complete \n "))
crime_Drug <- crossdist(crimePPP_Drug,crime_type_dist)
print(paste0("Drug Complete \n "))
crime_Damage <- crossdist(crimePPP_Damage,crime_type_dist)
print(paste0("Damage Complete \n "))
par(mfrow = c(2,3))
plot(crime_Theft)
plot(crime_Assualt)
plot(crime_Battery)
plot(crime_Drug)
plot(crime_Damage)
}
crossdistplot(crimePPP_Battery)
crossdistplot <- function(crime_type_dist){
crime_Theft <- crossdist(crimePPP_Theft,crime_type_dist)
# print(paste0("Theft Complete \n "))
# crime_Assualt <- crossdist(crimePPP_Assault,crime_type_dist)
# print(paste0("Assualt Complete \n "))
# crime_Battery <- crossdist(crimePPP_Battery,crime_type_dist)
# print(paste0("Battery Complete \n "))
# crime_Drug <- crossdist(crimePPP_Drug,crime_type_dist)
# print(paste0("Drug Complete \n "))
# crime_Damage <- crossdist(crimePPP_Damage,crime_type_dist)
# print(paste0("Damage Complete \n "))
par(mfrow = c(2,3))
plot(crime_Theft)
# plot(crime_Assualt)
# plot(crime_Battery)
# plot(crime_Drug)
# plot(crime_Damage)
}
crossdistplot(crimePPP_Battery)
crossdistplot <- function(crime_type_dist){
crime_Theft <- crossdist(crimePPP_Theft,crime_type_dist)
print(paste0("Theft Complete \n "))
crime_Assualt <- crossdist(crimePPP_Assault,crime_type_dist)
print(paste0("Assualt Complete \n "))
crime_Battery <- crossdist(crimePPP_Battery,crime_type_dist)
print(paste0("Battery Complete \n "))
crime_Drug <- crossdist(crimePPP_Drug,crime_type_dist)
print(paste0("Drug Complete \n "))
crime_Damage <- crossdist(crimePPP_Damage,crime_type_dist)
print(paste0("Damage Complete \n "))
par(mfrow = c(2,1))
plot(crime_Theft)
plot(crime_Assualt)
plot(crime_Battery)
plot(crime_Drug)
plot(crime_Damage)
}
crossdistplot(crimePPP_Battery)
b <- crossdist(crimePPP_Assault,crimePPP_Theft)
plot(b)
z<- crossdist(crimePPP_Battery,crimePPP_Theft)
plot(z)
b <- crossdist(crimePPP_Assault,crimePPP_Battery)
plot(b)
crossdistplot <- function(crime_type_dist){
crime_Theft <- crossdist(crimePPP_Theft,crime_type_dist)
print(paste0("Theft Complete \n "))
crime_Assualt <- crossdist(crimePPP_Assault,crime_type_dist)
print(paste0("Assualt Complete \n "))
crime_Battery <- crossdist(crimePPP_Battery,crime_type_dist)
print(paste0("Battery Complete \n "))
crime_Drug <- crossdist(crimePPP_Drug,crime_type_dist)
print(paste0("Drug Complete \n "))
crime_Damage <- crossdist(crimePPP_Damage,crime_type_dist)
print(paste0("Damage Complete \n "))
par(mfrow = c(2,2))
plot(crime_Theft)
plot(crime_Assualt)
plot(crime_Battery)
plot(crime_Drug)
plot(crime_Damage)
}
crossdistplot(crimePPP_Battery)
crossdistplot <- function(crime_type_dist){
#crime_Theft <- crossdist(crimePPP_Theft,crime_type_dist)
#print(paste0("Theft Complete \n "))
crime_Assualt <- crossdist(crimePPP_Assault,crime_type_dist)
print(paste0("Assualt Complete \n "))
# crime_Battery <- crossdist(crimePPP_Battery,crime_type_dist)
# print(paste0("Battery Complete \n "))
# crime_Drug <- crossdist(crimePPP_Drug,crime_type_dist)
# print(paste0("Drug Complete \n "))
# crime_Damage <- crossdist(crimePPP_Damage,crime_type_dist)
# print(paste0("Damage Complete \n "))
par(mfrow = c(2,2))
#plot(crime_Theft)
plot(crime_Assualt)
# plot(crime_Battery)
# plot(crime_Drug)
# plot(crime_Damage)
}
crossdistplot(crimePPP_Battery)
crossdistplot <- function(crime_type_dist){
#crime_Theft <- crossdist(crimePPP_Theft,crime_type_dist)
#print(paste0("Theft Complete \n "))
#crime_Assualt <- crossdist(crimePPP_Assault,crime_type_dist)
#print(paste0("Assualt Complete \n "))
crime_Battery <- crossdist(crimePPP_Battery,crime_type_dist)
print(paste0("Battery Complete \n "))
# crime_Drug <- crossdist(crimePPP_Drug,crime_type_dist)
# print(paste0("Drug Complete \n "))
# crime_Damage <- crossdist(crimePPP_Damage,crime_type_dist)
# print(paste0("Damage Complete \n "))
par(mfrow = c(2,2))
#plot(crime_Theft)
plot(crime_Assualt)
# plot(crime_Battery)
# plot(crime_Drug)
# plot(crime_Damage)
}
crossdistplot(crimePPP_Battery)
crossdistplot <- function(crime_type_dist){
#crime_Theft <- crossdist(crimePPP_Theft,crime_type_dist)
#print(paste0("Theft Complete \n "))
#crime_Assualt <- crossdist(crimePPP_Assault,crime_type_dist)
#print(paste0("Assualt Complete \n "))
crime_Battery <- crossdist(crimePPP_Battery,crime_type_dist)
print(paste0("Battery Complete \n "))
# crime_Drug <- crossdist(crimePPP_Drug,crime_type_dist)
# print(paste0("Drug Complete \n "))
# crime_Damage <- crossdist(crimePPP_Damage,crime_type_dist)
# print(paste0("Damage Complete \n "))
par(mfrow = c(2,2))
#plot(crime_Theft)
#plot(crime_Assualt)
plot(crime_Battery)
# plot(crime_Drug)
# plot(crime_Damage)
}
crossdistplot(crimePPP_Battery)
par(mfrow = c(1,2))
hist(nndist(crimePPP_Assault),breaks = 35, xlab = "distinace in meters", main = "Assualt nearst neighbor distances")
hist(nndist(crimePPP_Theft),breaks = 35, xlab = "distinace in meters", main = "Theft nearst neighbor distances")
par(mfrow = c(2,2))
hist(nndist(crimePPP_Assault),breaks = 35, xlab = "distinace in meters", main = "Assualt nearst neighbor distances")
hist(nndist(crimePPP_Theft),breaks = 35, xlab = "distinace in meters", main = "Theft nearst neighbor distances")
hist(nndist(crimePPP_Drug),breaks = 35, xlab = "distinace in meters", main = "Drug nearst neighbor distances")
hist(nndist(crimePPP_Battery),breaks = 35, xlab = "distinace in meters", main = "Battery nearst neighbor distances")
hist(nndist(crimePPP_Damage),breaks = 35, xlab = "distinace in meters", main = "Damage nearst neighbor distances")
par(mfrow = c(2,3))
hist(nndist(crimePPP_Assault),breaks = 35, xlab = "distinace in meters", main = "Assualt nearst neighbor distances")
hist(nndist(crimePPP_Theft),breaks = 35, xlab = "distinace in meters", main = "Theft nearst neighbor distances")
hist(nndist(crimePPP_Drug),breaks = 35, xlab = "distinace in meters", main = "Drug nearst neighbor distances")
hist(nndist(crimePPP_Battery),breaks = 35, xlab = "distinace in meters", main = "Battery nearst neighbor distances")
hist(nndist(crimePPP_Damage),breaks = 35, xlab = "distinace in meters", main = "Damage nearst neighbor distances")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(ggplot2)
library(knitr)
library(plyr)
library(maptools)
library(rgdal)
library(rgeos)
library(shapefiles)
library(sf)
library(sp)
library(spatstat)
# Load Chicago Crimes 2016-2018 CSV
df_crime<-read.csv("C:/Users/Bloody Dachi/Desktop/processs_crime_data.csv")#,nrows = 50000)
#crime.data <- read.csv("https://data.cityofchicago.org/api/views/ijzp-q8t2/rows.csv?accessType=DOWNLOAD",nrows = 50000)
df_crime_top5 <- subset(df_crime, crime %in% c("THEFT", "BATTERY", "DAMAGE" ,"DRUG","ASSAULT"))
df_crime_top5=df_crime_top5 %>% filter(Latitude > 40)
df_crime_top5=df_crime_top5 %>% filter(Longitude > -90)
coords <- SpatialPoints(df_crime_top5[,c("Longitude","Latitude")])
crime_spatial_df <-SpatialPointsDataFrame(coords,df_crime_top5)
proj4string(crime_spatial_df) <- CRS("+proj=longlat +ellps=WGS84")
plot(crime_spatial_df)
# Setting up Window Size / Formatting points to fit into shape of Chicago
#unzip("C:/Users/Ron III/Documents/GitHub/Chicago_Crime_Evolution_Analysis/Data_Sets_Files/Boundaries - ZIP Codes.zip", exdir = "C:/Users/Ron III/Documents/Crime_Research/shapefiles_1", overwrite = TRUE)
unzip("C:/Users/Bloody Dachi/Documents/Chicago_Crime_Evolution_Analysis/Data_Sets_Files/Boundaries - ZIP Codes.zip", exdir = "C:/Users/Bloody Dachi/Documents/Chicago_Crime_Evolution_Analysis/shapefiles_1", overwrite = TRUE)
chicago_shp <- readOGR(dsn = "C:/Users/Bloody Dachi/Documents/Chicago_Crime_Evolution_Analysis/shapefiles_1",layer = "geo_export_6c977322-0a01-4386-849c-278ec22209fe" )
w3=as.owin(chicago_shp)
#crimeProj = spTransform(chicago_shp,CRS("+proj=longlat +ellps=WGS84"))
#crimePPP1 = ppp(crime_spatial_df$Longitude[crime_spatial_df$crime=="THEFT"],crime_spatial_df$Latitude[crime_spatial_df$crime=="THEFT"],w3)
combining_plots <- function(crime_type){
crimePPP1 = ppp(crime_spatial_df$Longitude[crime_spatial_df$crime==crime_type],crime_spatial_df$Latitude[crime_spatial_df$crime==crime_type],w3)
par(mfrow=c(1,2))
plot(crimePPP1, main = paste0("Point Plotting",crime_type), pch = ".", cols =2)
qc <- quadratcount(crimePPP1)
plot(qc, main = paste0("Quadratcounting ",crime_type))
}
combining_plots("ASSAULT")
combining_plots("BATTERY")
combining_plots("DAMAGE")
combining_plots("DRUG")
combining_plots("THEFT")
# nns<-nndist(ppp(crime_spatial_df$Longitude[crime_spatial_df$crime=="DRUG"],crime_spatial_df$Latitude[crime_spatial_df$crime=="DRUG"],w3))
# summary(nns)
# plot(Gest(crimePPP1), add = TRUE, lwd = 3)
crimePPP_Theft = ppp(crime_spatial_df$Longitude[crime_spatial_df$crime=="THEFT"],crime_spatial_df$Latitude[crime_spatial_df$crime=="THEFT"],w3)
crimePPP_Battery = ppp(crime_spatial_df$Longitude[crime_spatial_df$crime=="BATTERY"],crime_spatial_df$Latitude[crime_spatial_df$crime=="BATTERY"],w3)
crimePPP_Damage = ppp(crime_spatial_df$Longitude[crime_spatial_df$crime=="DAMAGE"],crime_spatial_df$Latitude[crime_spatial_df$crime=="DAMAGE"],w3)
crimePPP_Assault = ppp(crime_spatial_df$Longitude[crime_spatial_df$crime=="ASSAULT"],crime_spatial_df$Latitude[crime_spatial_df$crime=="ASSAULT"],w3)
crimePPP_Drug = ppp(crime_spatial_df$Longitude[crime_spatial_df$crime=="DRUG"],crime_spatial_df$Latitude[crime_spatial_df$crime=="DRUG"],w3)
marks(crimePPP_Assault) = rep("Assualt", npoints(crimePPP_Assault))
marks(crimePPP_Theft) = rep("Theft", npoints(crimePPP_Theft))
marks(crimePPP_Battery) = rep("Battery", npoints(crimePPP_Battery))
marks(crimePPP_Damage) = rep("Damage", npoints(crimePPP_Damage))
marks(crimePPP_Drug) = rep("Drug", npoints(crimePPP_Drug))
# DONT TOUCH
Y = list(crimePPP_Assault,crimePPP_Battery,crimePPP_Damage,crimePPP_Drug,crimePPP_Theft)
X = crimePPP_Assault
for (i in 2: length(Y)){ X = superimpose(X,Y[[i]])}
#sapply(seq_along(Y),function(x){ X = superimpose(X,Y[[x]])})
marks(X)=as.factor(marks(X))
# the lambda argument specifys the density plot for assessing inhomogeneity
(Minhom<-quadrat.test(crimePPP_Assault, nx = 4, ny = 10, method = "MonteCarlo", lambda = density(crimePPP_Assault, sigma = .5)))
plot(density(crimePPP_Assault,sigma = .5), main = "grid counts for inhomogenious denisty")
plot(Minhom, cex = 0.5, col = "white", add = T)
# z<- crossdist(crimePPP_Battery,crimePPP_Theft)
# plot(z)
# mean(z)
#
# b <- crossdist(crimePPP_Assault,crimePPP_Battery)
# plot(b)
# mean(b)
#
# t.test(z,b)
par(mfrow = c(2,3))
hist(nndist(crimePPP_Assault),breaks = 35, xlab = "distinace in meters", main = "Assualt nearst neighbor distances")
hist(nndist(crimePPP_Theft),breaks = 35, xlab = "distinace in meters", main = "Theft nearst neighbor distances")
hist(nndist(crimePPP_Drug),breaks = 35, xlab = "distinace in meters", main = "Drug nearst neighbor distances")
hist(nndist(crimePPP_Battery),breaks = 35, xlab = "distinace in meters", main = "Battery nearst neighbor distances")
hist(nndist(crimePPP_Damage),breaks = 35, xlab = "distinace in meters", main = "Damage nearst neighbor distances")
# Assualt_Theft_Dist <- pppdist(crimePPP_Battery,crimePPP_Theft,type = "spa")
# Assualt_Battery_Dist <- pppdist(crimePPP_Battery,crimePPP_Battery,type = "spa")
# Assualt_Drug_Dist <- pppdist(crimePPP_Battery,crimePPP_Drug,type = "spa")
# Assualt_Damage_Dist <- pppdist(crimePPP_Battery,crimePPP_Damage,type = "spa")
#
#
#
# crime_distance_df <- data.frame(Theft = as.numeric(0),Battery = as.numeric(0),Drug = as.numeric(0),Damage = as.numeric(0))
#
#
# crime_distance_df$Theft <- Assualt_Theft_Dist$distance
# crime_distance_df$Battery <- Assualt_Battery_Dist$distance
# crime_distance_df$Drug <- Assualt_Drug_Dist$distance
# crime_distance_df$Damage <- Assualt_Damage_Dist$distance
# crime_distance_df
distance_table <- function(crime_type_dist){
crime_Theft_Dist <- pppdist(crime_type_dist,crimePPP_Theft,type = "spa")
print(paste0("Theft Complete \n "))
crime_Assualt_Dist <- pppdist(crime_type_dist,crimePPP_Assault,type = "spa")
print(paste0("Assualt Complete \n "))
crime_Battery_Dist <- pppdist(crime_type_dist,crimePPP_Battery,type = "spa")
print(paste0("Battery Complete \n "))
crime_Drug_Dist <- pppdist(crime_type_dist,crimePPP_Drug,type = "spa")
print(paste0("Drug Complete \n "))
crime_Damage_Dist <- pppdist(crime_type_dist,crimePPP_Damage,type = "spa")
print(paste0("Damage Complete \n "))
crime_distance_df <- data.frame(Assualt = as.numeric(0),Theft = as.numeric(0),Battery = as.numeric(0),Drug = as.numeric(0),Damage = as.numeric(0))
crime_distance_df$Theft <- crime_Theft_Dist$distance
crime_distance_df$Assualt <- crime_Assualt_Dist$distance
crime_distance_df$Battery <- crime_Battery_Dist$distance
crime_distance_df$Drug <- crime_Drug_Dist$distance
crime_distance_df$Damage <- crime_Damage_Dist$distance
print(paste0("Ready to make DataFrame  \n "))
crime_distance_df
}
# Takes about 20min for each table of means to be formed
# By the end of the tables being formed you should be able
# to discuss the relationship of distance betweeen each crime
# pattter with large values being potential of the crimes happening
# to each other not being a lot. If the value small then the case
# that the crimes occur around each other is high
#Battery_Dist_Comparison_DF <- distance_table(crimePPP_Battery)
#marks(X)
#
# assualt_density <- density.ppp(crimePPP_Assault,sigma = bw.scott(crimePPP_Assault))
# theft_density <- density.ppp(crimePPP_Theft,sigma = bw.scott(crimePPP_Theft))
#
# # mean(nndist(crimePPP_Assault,k=1))*1000
# # summary(crimePPP_Assault)
#
# g12 = Gcross(X, "Assualt","Theft",assualt_density,theft_density,r=NULL,breaks=NULL, correction = "best")
# plot( g12 )
#
# X
# lon <- crime_spatial_df$Longitude
# lat <- crime_spatial_df$Latitude
# xrange <- range(lon,na.rm = T)
# yrange <- range(lat,na.rm = T)
# crime_ppp <- ppp(lon,lat,xrange,yrange,marks = as.factor(crime_spatial_df$crime))
# plot(crime_ppp, main = "Our Crime PPP Object")
# qc <- quadratcount(crime_ppp)
# plot(qc)
par(mfrow = c(2,3))
hist(nndist(crimePPP_Assault),breaks = 5, xlab = "distinace in meters", main = "Assualt nearst neighbor distances")
hist(nndist(crimePPP_Theft),breaks = 5, xlab = "distinace in meters", main = "Theft nearst neighbor distances")
hist(nndist(crimePPP_Drug),breaks = 5, xlab = "distinace in meters", main = "Drug nearst neighbor distances")
hist(nndist(crimePPP_Battery),breaks = 5, xlab = "distinace in meters", main = "Battery nearst neighbor distances")
hist(nndist(crimePPP_Damage),breaks = 5, xlab = "distinace in meters", main = "Damage nearst neighbor distances")
par(mfrow = c(2,3))
hist(nndist(crimePPP_Assault),breaks = 1, xlab = "distinace in meters", main = "Assualt nearst neighbor distances")
hist(nndist(crimePPP_Theft),breaks = 1 xlab = "distinace in meters", main = "Theft nearst neighbor distances")
par(mfrow = c(2,3))
hist(nndist(crimePPP_Assault),breaks = 1, xlab = "distinace in meters", main = "Assualt nearst neighbor distances")
hist(nndist(crimePPP_Theft),breaks = 1, xlab = "distinace in meters", main = "Theft nearst neighbor distances")
hist(nndist(crimePPP_Drug),breaks = 1 ,xlab = "distinace in meters", main = "Drug nearst neighbor distances")
hist(nndist(crimePPP_Battery),breaks = 5, xlab = "distinace in meters", main = "Battery nearst neighbor distances")
hist(nndist(crimePPP_Damage),breaks = 1, xlab = "distinace in meters", main = "Damage nearst neighbor distances")
par(mfrow = c(2,3))
hist(nndist(crimePPP_Assault),breaks = 11, xlab = "distinace in meters", main = "Assualt nearst neighbor distances")
hist(nndist(crimePPP_Theft),breaks = 11, xlab = "distinace in meters", main = "Theft nearst neighbor distances")
hist(nndist(crimePPP_Drug),breaks = 11 ,xlab = "distinace in meters", main = "Drug nearst neighbor distances")
hist(nndist(crimePPP_Battery),breaks = 1, xlab = "distinace in meters", main = "Battery nearst neighbor distances")
hist(nndist(crimePPP_Damage),breaks = 11, xlab = "distinace in meters", main = "Damage nearst neighbor distances")
par(mfrow = c(2,3))
hist(nndist(crimePPP_Assault),breaks = 101, xlab = "distinace in meters", main = "Assualt nearst neighbor distances")
hist(nndist(crimePPP_Theft),breaks = 101, xlab = "distinace in meters", main = "Theft nearst neighbor distances")
hist(nndist(crimePPP_Drug),breaks = 101 ,xlab = "distinace in meters", main = "Drug nearst neighbor distances")
hist(nndist(crimePPP_Battery),breaks = 101, xlab = "distinace in meters", main = "Battery nearst neighbor distances")
hist(nndist(crimePPP_Damage),breaks = 101, xlab = "distinace in meters", main = "Damage nearst neighbor distances")
par(mfrow = c(2,3))
hist(nndist(crimePPP_Assault),breaks = 11, xlab = "distinace in meters", main = "Assualt nearst neighbor distances")
hist(nndist(crimePPP_Theft),breaks = 11, xlab = "distinace in meters", main = "Theft nearst neighbor distances")
hist(nndist(crimePPP_Drug),breaks = 11 ,xlab = "distinace in meters", main = "Drug nearst neighbor distances")
hist(nndist(crimePPP_Battery),breaks = 11, xlab = "distinace in meters", main = "Battery nearst neighbor distances")
hist(nndist(crimePPP_Damage),breaks = 11, xlab = "distinace in meters", main = "Damage nearst neighbor distances")
# Takes about 20min for each table of means to be formed
# By the end of the tables being formed you should be able
# to discuss the relationship of distance betweeen each crime
# pattter with large values being potential of the crimes happening
# to each other not being a lot. If the value small then the case
# that the crimes occur around each other is high
Theft_Dist_Comparison_DF <- distance_table(crimePPP_Theft)
# Takes about 20min for each table of means to be formed
# By the end of the tables being formed you should be able
# to discuss the relationship of distance betweeen each crime
# pattter with large values being potential of the crimes happening
# to each other not being a lot. If the value small then the case
# that the crimes occur around each other is high
yeet < - pppdist(crimePPP_Theft,crimePPP_Assualt,type = "spa")
# Takes about 20min for each table of means to be formed
# By the end of the tables being formed you should be able
# to discuss the relationship of distance betweeen each crime
# pattter with large values being potential of the crimes happening
# to each other not being a lot. If the value small then the case
# that the crimes occur around each other is high
yeet <- pppdist(crimePPP_Theft,crimePPP_Assualt,type = "spa")
# Takes about 20min for each table of means to be formed
# By the end of the tables being formed you should be able
# to discuss the relationship of distance betweeen each crime
# pattter with large values being potential of the crimes happening
# to each other not being a lot. If the value small then the case
# that the crimes occur around each other is high
yeet <- pppdist(crimePPP_Theft,crimePPP_Assault,type = "spa")
# Takes about 20min for each table of means to be formed
# By the end of the tables being formed you should be able
# to discuss the relationship of distance betweeen each crime
# pattter with large values being potential of the crimes happening
# to each other not being a lot. If the value small then the case
# that the crimes occur around each other is high
memory.limit(max = FALSE)
# Takes about 20min for each table of means to be formed
# By the end of the tables being formed you should be able
# to discuss the relationship of distance betweeen each crime
# pattter with large values being potential of the crimes happening
# to each other not being a lot. If the value small then the case
# that the crimes occur around each other is high
memory.limit(max = FALSE)
# Takes about 20min for each table of means to be formed
# By the end of the tables being formed you should be able
# to discuss the relationship of distance betweeen each crime
# pattter with large values being potential of the crimes happening
# to each other not being a lot. If the value small then the case
# that the crimes occur around each other is high
memory.size(max = FALSE)
yeet <- pppdist(crimePPP_Theft,crimePPP_Assault,type = "spa")
View(crimePPP_Assault)
z<- crossdist(crimePPP_Battery,crimePPP_Theft)
nns<-nndist(ppp(crime_spatial_df$Longitude[crime_spatial_df$crime=="DRUG"],crime_spatial_df$Latitude[crime_spatial_df$crime=="DRUG"],w3))
summary(nns)
mean(nns)
plot(nns)
plot(ecdf(nns))
plot(Gest(crime_spatial_df), add = TRUE,  lwd = 3)
plot(Gest(nns), add = TRUE,  lwd = 3)
plot(Gest(ppp(crime_spatial_df$Longitude[crime_spatial_df$crime=="DRUG"],crime_spatial_df$Latitude[crime_spatial_df$crime=="DRUG"],w3)), add = TRUE,  lwd = 3)
plot(Gest(crimePPP_Assault), add = TRUE,  lwd = 3)
plot(Gest(crimePPP_Assault), add = TRUE,  lwd = 3)
clarkevans(crimePPP_Theft, correction = "none")
clarkevans(crimePPP_Theft, correction = "none")
clarkevans(crimePPP_Theft, correction = "guard", clipregion = erode.owin(rr, + r = 1))
clarkevans(crimePPP_Theft, correction = "guard", clipregion = erode.owin(rr,  r = 1))
clarkevans(crimePPP_Theft, correction = "none")
rr <- ripras(crimePPP_Theft)
clarkevans(crimePPP_Theft, correction = "guard", clipregion = erode.owin(rr,  r = 1))
clarkevans(crimePPP_Theft, correction = "guard", clipregion = erode.owin(rr,  r = 0.1))
clarkevans(crimePPP_Theft, correction = "guard", clipregion = erosion.owin(rr,  r = 1))
clarkevans(crimePPP_Theft, correction = "guard", clipregion = erosion.owin(rr,  r = 0.91))
clarkevans(crimePPP_Theft, correction = "guard", clipregion = erosion.owin(rr,  r = .8))
clarkevans(crimePPP_Theft, correction = "guard", clipregion = erosion.owin(rr,  r = .7))
clarkevans(crimePPP_Theft, correction = "guard", clipregion = erosion.owin(rr,  r = .5))
clarkevans(crimePPP_Theft, correction = "guard", clipregion = erosion.owin(rr,  r = .6))
clarkevans(crimePPP_Theft, correction = "guard", clipregion = erosion.owin(rr,  r = .4))
clarkevans(crimePPP_Theft, correction = "guard", clipregion = erosion.owin(rr,  r = .2))
clarkevans(crimePPP_Theft, correction = "guard", clipregion = erosion.owin(rr,  r = .1))
clarkevans(crimePPP_Theft, correction = "none")
rr <- ripras(crimePPP_Theft)
clarkevans(crimePPP_Theft, correction = "guard", clipregion = erosion.owin(rr,  r = .1))
ex <- expression(runifpoint(crimePPP_Theft, win = rr))
res <- envelope(crimePPP_Theft, Kest, nsim = 99, simulate = ex, verbose = FALSE, saveall = TRUE)
# plot(Gest(crimePPP1), add = TRUE, lwd = 3)
crimePPP_Theft_rr <- ppp(crimePPP_Theft$x, + crimePPP_Theft$y, window = rr)
crimePPP_Theft_rr <- ppp(crimePPP_Theft$x, + crimePPP_Theft$y, window = rr)
ex <- expression(runifpoint(crimePPP_Theft_rr$n, win = rr))
res <- envelope(crimePPP_Theft_rr, Kest, nsim = 99, simulate = ex, verbose = FALSE, saveall = TRUE)
min(df_crime_top5$Year)
min(df_crime_top5$Year)
myts <- ts(df_crime_top5$Year,
frequency=12,
start=c(2001,4))
gridExtra::grid.arrange(
ggplot2::autoplot(myts),
forecast::ggseasonplot(myts),
forecast::ggsubseriesplot(myts),
forecast::ggAcf(myts)
)
library(forecast)
min(df_crime_top5$Year)
myts <- ts(df_crime_top5$Year,
frequency=12,
start=c(2001,4))
gridExtra::grid.arrange(
ggplot2::autoplot(myts),
forecast::ggseasonplot(myts),
forecast::ggsubseriesplot(myts),
forecast::ggAcf(myts)
)
min(df_crime_top5$Year)
forecast::gglagplot(myts)
